{
	"compiler": {
		"version": "0.8.0+commit.c7dfd78e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "_beneficiary",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "_startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_duration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_releaseSchedule",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_tokesReleased",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "_isValid",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct TokenVesting.vestingScheme",
						"name": "",
						"type": "tuple"
					}
				],
				"name": "VestingShemeCreation",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "beneficiary_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "startTime_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "duration_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "releaseSchedule_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount_",
						"type": "uint256"
					}
				],
				"name": "createVestingScheme",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_schemeId",
						"type": "uint256"
					}
				],
				"name": "getVestingSchemeById",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "_beneficiary",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "_startTime",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_duration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_releaseSchedule",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_amount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "_tokesReleased",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "_isValid",
								"type": "bool"
							}
						],
						"internalType": "struct TokenVesting.vestingScheme",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_schemeId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "releaseTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contract/tokenvesting.sol": "TokenVesting"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contract/token.sol": {
			"keccak256": "0x606860eba3dc71b5cadbacf2dc00f113b0c3751e7e534689c6970809f2cc60d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://7aa3c4ff9244ce3bafd4d7597770dfd81b9ade0346de810db876b169a14d8e65",
				"dweb:/ipfs/QmZTQn6wCLK8qejHwDBAeawu9emYjsSWUkgQb8RJ4AymJj"
			]
		},
		"contract/tokenvesting.sol": {
			"keccak256": "0xb75bd16ce7adaf497497eeea941f6f07f3d4da0504d9568bd8e0f33641a16d64",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f30dc2f2d9d98ba620d07474e6b371a12c5938bb7f382a541adc81d73828c9f",
				"dweb:/ipfs/QmY6aFvXNwxSvc9QZThccPcDWiTBP7unKVuC4BxH5XG77z"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa",
			"license": "MIT",
			"urls": [
				"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838",
				"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
				"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
			"license": "MIT",
			"urls": [
				"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
				"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
			]
		}
	},
	"version": 1
}